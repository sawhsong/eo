<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy"/>
	<security:http pattern="/login/userlogin" security="none"/>

	<security:http auto-config="false" use-expressions="true" entry-point-ref="authenticationEntryPoint">
		<security:headers>
			<security:cache-control/>
			<security:content-type-options/>
			<security:hsts/>
<!-- 			<security:frame-options/> -->
			<security:xss-protection/>
			<security:frame-options policy="SAMEORIGIN"/>
		</security:headers>

<!-- 		<security:session-management invalid-session-url="/sessionTimeout.html"/> -->

		<security:custom-filter position="FORM_LOGIN_FILTER" ref="myFilter"/>
		<security:custom-filter ref="basicAuthenticationFilter" after="BASIC_AUTH_FILTER"/>

<!-- 		<security:intercept-url pattern="/crossdomain.xml" access="permitAll"/> -->

<!-- 		<security:intercept-url pattern="/**" access="isAuthenticated()"/> -->
<!-- 		<security:remember-me/> -->

<!-- 		<security:access-denied-handler error-page="/error"/> -->
	</security:http>

	<bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint">
		<constructor-arg>
			<map>
				<entry key="hasHeader('User-Agent', 'Java')" value-ref="basicAuthEntryPoint"/>
			</map>
		</constructor-arg>
		<property name="defaultEntryPoint" ref="loginUrlAuthenticationEntryPoint"/>
	</bean>

	<bean id="basicAuthEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
		<property name="realmName" value="REST Realm"/>
	</bean>

	<bean id="basicAuthenticationFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
		<constructor-arg ref="authManager"/>
		<constructor-arg ref="basicAuthEntryPoint"/>
	</bean>

	<bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<constructor-arg name="loginFormUrl" value="/login/userlogin"/>
	</bean>

	<security:authentication-manager alias="authManager" erase-credentials="false">
		<security:authentication-provider user-service-ref="jdbcUserService"/>
	</security:authentication-manager>
	<bean id="jdbcUserService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<property name="dataSource" ref="${jdbc.using.dataSource}"/>
		<property name="usersByUsernameQuery" value="select username,password,flag AS ENABLED from adm_usermaster where username=?"/>
		<property name="authoritiesByUsernameQuery" value="select au.username, ar.rolename from adm_usermaster au, adm_rolemaster ar where au.roleid= ar.roleid and au.username = ?"/>
	</bean>

	<bean id="myFilter" class="zebra.filter.SecurityFilter">
		<property name="authenticationManager" ref="authManager"/>
		<property name="filterProcessesUrl" value="/authenticationFilter"/>
		<property name="authenticationFailureHandler" ref="failureHandler"/>
		<property name="authenticationSuccessHandler" ref="successHandler"/>
	</bean>

	<bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/authentication"/>
		<property name="alwaysUseDefaultTargetUrl" value="true"/>
	</bean>

	<bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/error"/>
	</bean>
</beans>