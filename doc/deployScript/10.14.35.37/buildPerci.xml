<?xml version="1.0" encoding="UTF-8"?>
<project name="build perci" default="distribution" basedir=".">
	<property file="buildPerci.properties"/>
	<property name="cvs.rootStr" value=":pserver:${cvs.user}@${cvs.serverIp}:${cvs.homeDir}"/>
	<property name="dir.webInf" value="${dir.download}/${cvs.module}/${dir.jsp}/WEB-INF"/>
	<property name="dir.srcRoot" value="${dir.download}/${cvs.module}/${dir.src}"/>
	<property name="dir.appServer.root" value="${dir.appServer}/perci"/>

	<path id="project.classpath">
		<fileset dir="${dir.webInf}/lib" casesensitive="no">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${dir.appServer}/lib" casesensitive="no">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<target name="clean" description="Cleaning directory">
		<delete dir="${dir.download}"/>
	</target>

	<target name="get source" depends="clean">
		<echo>Getting project sources from CVS - [${cvs.module}] [${cvs.branch}] [${cvs.serverIp}]</echo>
		<cvspass cvsroot="${cvs.rootStr}" password="${cvs.pass}" passfile=".cvspass"/>
		<cvs cvsRoot="${cvs.rootStr}" package="${cvs.module}" dest="${dir.download}" passfile=".cvspass" command="export" tag="${cvs.branch}" failonerror="true"/>
		<echo>Completed getting project from CVS</echo>
	</target>

	<target name="compile" depends="get source">
		<echo>Starting compilation</echo>
		<mkdir dir="${dir.webInf}/classes"/>
		<javac srcdir="${dir.download}/${cvs.module}/${dir.src}/"
			destdir="${dir.webInf}/classes"
			executable="${dir.jdkHome}/bin/javac"
			encoding="UTF-8"
			fork="true" debug="on" optimize="off" verbose="no" deprecation="false" memoryInitialSize="256m" memoryMaximumSize="512m">
			<classpath refid = "project.classpath"/>
		</javac>
		<copy todir="${dir.webInf}/classes/com">
			<fileset dir="${dir.srcRoot}/com" includes="**/*.xml,**/*.properties"/>
		</copy>
		<copy todir="${dir.webInf}/classes/com">
			<fileset file="${dir.srcRoot}/com/eis_rs.properties" casesensitive="no"/>
		</copy>
		<copy todir="${dir.webInf}/classes">
			<fileset dir="${dir.srcRoot}" excludes="**/com/**,**/eis/**,**/es/**"/>
		</copy>
		<echo>Compilation completed!</echo>
	</target>

	<target name="distribution" depends="compile">
		<echo>Creating distribution</echo>
		<copy todir="${dir.appServer.root}">
			<fileset dir="${dir.download}/${cvs.module}/${dir.jsp}" casesensitive="yes"/>
		</copy>
		<delete dir="${dir.download}"/>
		<echo>Distribution Completed!</echo>
		<echo>Build Completed !</echo>
	</target>
</project>