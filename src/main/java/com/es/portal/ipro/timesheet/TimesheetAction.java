/**************************************************************************************************
 * Project
 * Description - MyTimesheet - My Timesheet
 *	- Generated by Source Generator
 *************************************************************************************************/
package com.es.portal.ipro.timesheet;

import org.springframework.beans.factory.annotation.Autowired;

import com.es.portal.common.extend.BaseAction;

import zebra.data.DataSet;
import zebra.util.CommonUtil;

public class TimesheetAction extends BaseAction {
	@Autowired
	private TimesheetBiz biz;

	public String mytimesheets() throws Exception {
		biz.myTimesheets(paramEntity);
		return "myTimesheet";
	}

	public String getAssignmentInfo() throws Exception {
		try {
			biz.getAssignmentInfo(paramEntity);
		} catch (Exception ex) {
		}
		setRequestAttribute("paramEntity", paramEntity);
		return "ajaxResponse";
	}

	public String getPeriodByAssignmentId() throws Exception {
		try {
			biz.getPeriodByAssignmentId(paramEntity);
		} catch (Exception ex) {
		}
		setRequestAttribute("paramEntity", paramEntity);
		return "ajaxResponse";
	}

	public String getDayListByPeriod() throws Exception {
		try {
			biz.getDayListByPeriod(paramEntity);
		} catch (Exception ex) {
		}
		setRequestAttribute("paramEntity", paramEntity);
		return "ajaxResponse";
	}

	public String refreshDayListByPeriod() throws Exception {
		try {
			biz.refreshDayListByPeriod(paramEntity);
		} catch (Exception ex) {
		}
		setRequestAttribute("paramEntity", paramEntity);
		return "ajaxResponse";
	}

	public String getDailyDetailScreen() throws Exception {
		DataSet dsRequest = paramEntity.getRequestDataSet();
		String timesheetUnits = dsRequest.getValue("timesheetUnits");

		biz.getDailyDetailScreen(paramEntity);
		if (CommonUtil.isIn(timesheetUnits, "HSE", "DSE")) {
			return "timesheetDailyDetailSE";
		} else {
			return "timesheetDailyDetail";
		}
	}

	public String getDailyDetailData() throws Exception {
		try {
			biz.getDailyDetailData(paramEntity);
		} catch (Exception ex) {
		}
		setRequestAttribute("paramEntity", paramEntity);
		return "ajaxResponse";
	}

	public String calculateTimeWorked() throws Exception {
		try {
			biz.calculateTimeWorked(paramEntity);
		} catch (Exception ex) {
		}
		setRequestAttribute("paramEntity", paramEntity);
		return "ajaxResponse";
	}

	public String updateDailyDetail() throws Exception {
		try {
			biz.updateDailyDetail(paramEntity);
		} catch (Exception ex) {
		}
		setRequestAttribute("paramEntity", paramEntity);
		return "ajaxResponse";
	}

	public String postTimesheet() throws Exception {
		try {
			biz.postTimesheet(paramEntity);
		} catch (Exception ex) {
		}
		setRequestAttribute("paramEntity", paramEntity);
		return "ajaxResponse";
	}
}